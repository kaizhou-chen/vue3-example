import{Q as a}from"./QuestionLayout-DiQIqadi.js";import{d as c,r as m,a as p,o as _,b as f,w as d,e as h,u as v,X as e,Z as t}from"./index-D-j_Yy59.js";import"./main-D2Rn1tdF.js";import"./plugin-vueexport-helper-DlAUqK2U.js";const w=e("div",null,"给 fetch 添加超时功能",-1),P=e("ul",null,[t(" 解题思路 "),e("li",null,"创建一个高阶函数，返回一个有默认超时时间的函数"),e("li",null,"返回一个 Promise，用 setTimeout 定时，如果超时则 reject"),e("li",null,"调用 fetch，并使用 Promise 的 resolve 和 reject"),e("li",null,[e("p",null,[e("b",null,"Promise 的状态一旦确定，就不会再修改")]),e("p",null,[t("fetch 正常执行然后 resolve，"),e("b",null," 状态已确定 "),t("，到达超时时间调用 reject，被忽略")]),e("p",null,[t("请求超时调用 reject，"),e("b",null," 状态已经确定 "),t("，当 fetch 请求结束调用 resolve，被忽略")]),e("p",null,"所以，Promise 的状态和结果不受影响")])],-1),C=c({__name:"FetchWithTimeout",setup(T){const s=m(i.toString());function i(r=5e3){return function(n,o){return new Promise((u,l)=>{fetch(n,o).then(u,l),setTimeout(()=>{l(new Error("request timeout"))},r)})}}return(r,n)=>{const o=p("el-divider");return _(),f(a,{answer:v(s)},{default:d(()=>[w,h(o),P]),_:1},8,["answer"])}}});export{C as default};
